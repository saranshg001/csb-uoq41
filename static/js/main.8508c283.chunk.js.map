{"version":3,"sources":["data.js","Components/CatItem.js","App.js","index.js"],"names":["ITEMS_DATA","catName","available","subCat","name","items","colors","options","skuId","count","unlimited","CatItem","props","data","Accordion","AccordionSummary","expandIcon","id","Typography","style","marginTop","right","position","Switch","checked","disabled","AccordionDetails","map","subItem","subCatCount","itemDetails","itemCount","countChange","isUnlimeted","DetailRow","React","Unlimited","setunlimited","Count","setCount","edited","setEdited","width","display","flexDirection","type","onChange","e","target","value","maxWidth","for","onClick","App","product","setProduct","JSON","parse","localStorage","getItem","className","marginBottom","text","catCount","itemIndex","copyProduct","toast","success","error","setItem","stringify","clear","FormetedColumn","colWidth","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8508c283.chunk.js","sourcesContent":["export const ITEMS_DATA = [\r\n  {\r\n    catName: \"Vegitables & Fruits\",\r\n    available: true,\r\n    subCat: [\r\n      {\r\n        name: \"Vegitables\",\r\n        available: true,\r\n        items: [\r\n          {\r\n            name: \"Cucumber\",\r\n            colors: \"#00b121\",\r\n            options: \"Large\",\r\n            skuId: \"SKU02052\",\r\n            count: 24,\r\n            unlimited: false\r\n          },\r\n          {\r\n            name: \"Green Chilly\",\r\n            colors: \"#00B121\",\r\n            options: \"Small\",\r\n            skuId: \"SKUD2552\",\r\n            count: 0,\r\n            unlimited: true\r\n          },\r\n          {\r\n            name: \"Carrot\",\r\n            colors: \"#335333\",\r\n            options: \"Medium\",\r\n            skuId: \"SKU96054\",\r\n            count: 0,\r\n            unlimited: false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: \"Fruits\",\r\n        available: false,\r\n        items: [\r\n          {\r\n            name: \"Banana\",\r\n            colors: \"#FFDA00\",\r\n            options: \"Medium\",\r\n            skuId: \"SKU0249\",\r\n            count: 0,\r\n            unlimited: true\r\n          },\r\n          {\r\n            name: \"Green Apple\",\r\n            colors: \"#00B121\",\r\n            options: \"Large\",\r\n            skuId: \"S596050\",\r\n            count: 0,\r\n            unlimited: true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    catName: \"Bread & Dairy\",\r\n    available: false,\r\n    subCat: [\r\n      {\r\n        name: \"Bread\",\r\n        available: false,\r\n        items: []\r\n      },\r\n      {\r\n        name: \"Dairy\",\r\n        available: true,\r\n        items: []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    catName: \"Snacks\",\r\n    available: false,\r\n    subCat: [\r\n      {\r\n        name: \"Snacks\",\r\n        available: true,\r\n        items: []\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import * as React from \"react\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\n////////\r\n/////\r\nconst CatItem = (props) => {\r\n  const { catName = \"\", available = false, subCat = [] } = props?.data;\r\n  return (\r\n    <div>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography>{catName}</Typography>\r\n          <div style={{ marginTop: -8, right: 50, position: \"absolute\" }}>\r\n            Availability\r\n            <Switch checked={available} disabled />\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {subCat?.map((subItem, subCatCount) => (\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography>{subItem.name}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                {subItem?.items?.map((itemDetails, itemCount) => (\r\n                  <DetailRow\r\n                    data={itemDetails}\r\n                    countChange={(id, count, isUnlimeted) =>\r\n                      props?.countChange(\r\n                        itemCount,\r\n                        count,\r\n                        isUnlimeted,\r\n                        subCatCount\r\n                      )\r\n                    }\r\n                  />\r\n                ))}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DetailRow = (props) => {\r\n  const {\r\n    name = \"\",\r\n    colors = \"\",\r\n    options = \"\",\r\n    skuId = \"\",\r\n    count = 0,\r\n    unlimited = false\r\n  } = props?.data;\r\n  const [Unlimited, setunlimited] = React.useState(unlimited);\r\n  const [Count, setCount] = React.useState(count);\r\n  const [edited, setEdited] = React.useState(false);\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginTop: 10\r\n      }}\r\n    >\r\n      <div style={{ width: \"20%\" }}>{name}</div>\r\n      <div style={{ width: \"10%\" }}>{colors}</div>\r\n      <div style={{ width: \"10%\" }}>{options}</div>\r\n      <div style={{ width: \"10%\" }}>{skuId}</div>\r\n      <div style={{ width: \"25%\" }}>\r\n        {!edited ? (\r\n          Unlimited ? (\r\n            \"Unlimited\"\r\n          ) : (\r\n            Count\r\n          )\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"number\"\r\n              disabled={Unlimited}\r\n              onChange={(e) => e.target.value >= 0 && setCount(e.target.value)}\r\n              value={Count}\r\n              style={{ maxWidth: 30 }}\r\n            />\r\n            <input\r\n              onChange={(e) => {\r\n                setunlimited(e?.target?.checked);\r\n                e?.target?.checked && setCount(0);\r\n              }}\r\n              checked={Unlimited}\r\n              type=\"checkbox\"\r\n              name=\"unlimited\"\r\n            />\r\n            <label for=\"vehicle3\">Unlimited</label>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div style={{ width: \"25%\" }}>\r\n        {!edited ? (\r\n          <button\r\n            onClick={() => {\r\n              setEdited(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              props?.countChange(skuId, Count, Unlimited);\r\n              setEdited(false);\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CatItem);\r\n","import * as React from \"react\";\nimport { ITEMS_DATA } from \"./data\";\nimport CatItem from \"./Components/CatItem\";\nimport { toast } from \"react-toastify\";\n\nexport default function App() {\n  const [product, setProduct] = React.useState([]);\n  React.useEffect(() => {\n    if (JSON.parse(localStorage.getItem(\"productData\"))) {\n      setProduct(JSON.parse(localStorage.getItem(\"productData\")));\n    } else {\n      setProduct(ITEMS_DATA);\n    }\n  }, []);\n\n  const countChange = (\n    itemIndex,\n    count,\n    isUnlimeted,\n    subCatCount,\n    catCount\n  ) => {\n    let copyProduct = [...product];\n    debugger;\n    if (copyProduct[catCount]?.subCat[subCatCount]?.items[itemIndex]) {\n      copyProduct[catCount].subCat[subCatCount].items[itemIndex][\n        \"count\"\n      ] = count;\n      copyProduct[catCount].subCat[subCatCount].items[itemIndex][\n        \"unlimited\"\n      ] = isUnlimeted;\n      toast.success(\"Item Saved\");\n    } else {\n      toast.error(\"Error while saving item in Storage.\");\n    }\n    if (copyProduct) {\n      localStorage.setItem(\"productData\", JSON.stringify(copyProduct));\n    }\n  };\n\n  const clearAll = () => {\n    localStorage.clear();\n    toast.success(\"All Product Item Cleared.\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginBottom: 20\n        }}\n      >\n        <FormetedColumn width=\"20%\" text=\"Name\" />\n        <FormetedColumn width=\"10%\" text=\"Colors\" />\n        <FormetedColumn width=\"10%\" text=\"Options\" />\n        <FormetedColumn width=\"10%\" text=\"ID\" />\n        <FormetedColumn width=\"25%\" text=\"Count\" />\n        <FormetedColumn width=\"25%\" text=\"Action\" />\n      </div>\n      {product.map((e, catCount) => (\n        <CatItem\n          data={e}\n          countChange={(itemIndex, count, isUnlimeted, subCatCount) =>\n            countChange(itemIndex, count, isUnlimeted, subCatCount, catCount)\n          }\n        />\n      ))}\n      <div style={{ marginTop: 150 }}>\n        <button onClick={() => clearAll()}>Clear All Saved Data</button>\n        <div style={{ marginTop: 15 }}>\n          * Used Browser Local Storage for Saving Updated Data.\n        </div>\n        <div>* Task Done By: Saransh Gupta</div>\n      </div>\n    </div>\n  );\n}\n\nconst FormetedColumn = (props) => {\n  const { width: colWidth = \"20%\", text = \"\" } = props;\n  return <div style={{ width: colWidth }}>{text}</div>;\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n    <ToastContainer />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}